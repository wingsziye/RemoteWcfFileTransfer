//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace FileTransfer.WcfClient.WCF.FileUpdateService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCF.FileUpdateService.IFileUpdateService")]
    public interface IFileUpdateService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileUpdateService/UpdateFile", ReplyAction="http://tempuri.org/IFileUpdateService/UpdateFileResponse")]
        Remote.Infrastructure.DataContracts.FileTransferResponsed UpdateFile(Remote.Infrastructure.DataContracts.FileTransferRequest transferData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileUpdateService/UpdateFile", ReplyAction="http://tempuri.org/IFileUpdateService/UpdateFileResponse")]
        System.Threading.Tasks.Task<Remote.Infrastructure.DataContracts.FileTransferResponsed> UpdateFileAsync(Remote.Infrastructure.DataContracts.FileTransferRequest transferData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileUpdateService/UpdateFileBlockCheckMessage", ReplyAction="http://tempuri.org/IFileUpdateService/UpdateFileBlockCheckMessageResponse")]
        Remote.Infrastructure.DataContracts.BlockTransferResponsed UpdateFileBlockCheckMessage(Remote.Infrastructure.DataContracts.BlockTransferRequest blockMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileUpdateService/UpdateFileBlockCheckMessage", ReplyAction="http://tempuri.org/IFileUpdateService/UpdateFileBlockCheckMessageResponse")]
        System.Threading.Tasks.Task<Remote.Infrastructure.DataContracts.BlockTransferResponsed> UpdateFileBlockCheckMessageAsync(Remote.Infrastructure.DataContracts.BlockTransferRequest blockMessage);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFileUpdateServiceChannel : FileTransfer.WcfClient.WCF.FileUpdateService.IFileUpdateService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FileUpdateServiceClient : System.ServiceModel.ClientBase<FileTransfer.WcfClient.WCF.FileUpdateService.IFileUpdateService>, FileTransfer.WcfClient.WCF.FileUpdateService.IFileUpdateService {
        
        public FileUpdateServiceClient() {
        }
        
        public FileUpdateServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FileUpdateServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileUpdateServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileUpdateServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Remote.Infrastructure.DataContracts.FileTransferResponsed UpdateFile(Remote.Infrastructure.DataContracts.FileTransferRequest transferData) {
            return base.Channel.UpdateFile(transferData);
        }
        
        public System.Threading.Tasks.Task<Remote.Infrastructure.DataContracts.FileTransferResponsed> UpdateFileAsync(Remote.Infrastructure.DataContracts.FileTransferRequest transferData) {
            return base.Channel.UpdateFileAsync(transferData);
        }
        
        public Remote.Infrastructure.DataContracts.BlockTransferResponsed UpdateFileBlockCheckMessage(Remote.Infrastructure.DataContracts.BlockTransferRequest blockMessage) {
            return base.Channel.UpdateFileBlockCheckMessage(blockMessage);
        }
        
        public System.Threading.Tasks.Task<Remote.Infrastructure.DataContracts.BlockTransferResponsed> UpdateFileBlockCheckMessageAsync(Remote.Infrastructure.DataContracts.BlockTransferRequest blockMessage) {
            return base.Channel.UpdateFileBlockCheckMessageAsync(blockMessage);
        }
    }
}
